// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Taaldc.Catalog.Infrastructure;

#nullable disable

namespace Taaldc.Catalog.Infrastructure.Migrations
{
    [DbContext(typeof(CatalogDbContext))]
    partial class CatalogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Taaldc.Catalog.Domain.AggregatesModel.FloorAggregate.Floor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TowerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TowerId");

                    b.ToTable("floors", "catalog");
                });

            modelBuilder.Entity("Taaldc.Catalog.Domain.AggregatesModel.FloorAggregate.ScenicView", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("scenicview", "catalog");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "N/A"
                        },
                        new
                        {
                            Id = 2,
                            Name = "TAAL"
                        },
                        new
                        {
                            Id = 3,
                            Name = "HIGHLANDS"
                        },
                        new
                        {
                            Id = 4,
                            Name = "MANILA SKYLINE"
                        },
                        new
                        {
                            Id = 5,
                            Name = "ROTONDA"
                        });
                });

            modelBuilder.Entity("Taaldc.Catalog.Domain.AggregatesModel.FloorAggregate.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("FloorArea")
                        .HasColumnType("float");

                    b.Property<int>("FloorId")
                        .HasColumnType("int");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("_scenicViewId")
                        .HasColumnType("int")
                        .HasColumnName("ScenicViewId");

                    b.Property<int>("_unitStatusId")
                        .HasColumnType("int")
                        .HasColumnName("UnitStatus");

                    b.Property<int>("_unitTypeId")
                        .HasColumnType("int")
                        .HasColumnName("UnitType");

                    b.HasKey("Id");

                    b.HasIndex("FloorId");

                    b.HasIndex("Identifier")
                        .IsUnique();

                    b.HasIndex("_scenicViewId");

                    b.HasIndex("_unitStatusId");

                    b.HasIndex("_unitTypeId");

                    b.ToTable("unit", "catalog");
                });

            modelBuilder.Entity("Taaldc.Catalog.Domain.AggregatesModel.FloorAggregate.UnitStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("unitstatus", "catalog");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "AVAILABLE"
                        },
                        new
                        {
                            Id = 2,
                            Name = "SOLD"
                        },
                        new
                        {
                            Id = 3,
                            Name = "RESERVED"
                        },
                        new
                        {
                            Id = 4,
                            Name = "BLOCKED"
                        });
                });

            modelBuilder.Entity("Taaldc.Catalog.Domain.AggregatesModel.FloorAggregate.UnitType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ShortCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("unittype", "catalog");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "NOT APPLICABLE",
                            ShortCode = "N/A"
                        },
                        new
                        {
                            Id = 2,
                            Name = "ONE BEDROOM",
                            ShortCode = "1BR"
                        },
                        new
                        {
                            Id = 3,
                            Name = "TWO BEDROOM",
                            ShortCode = "2BR"
                        },
                        new
                        {
                            Id = 4,
                            Name = "PENTHOUSE",
                            ShortCode = "PH"
                        },
                        new
                        {
                            Id = 5,
                            Name = "RESIDENTIAL PARKING",
                            ShortCode = "RP"
                        },
                        new
                        {
                            Id = 6,
                            Name = "MOTORCYCLE PARKING",
                            ShortCode = "MP"
                        },
                        new
                        {
                            Id = 7,
                            Name = "COMMERCIAL SPACE",
                            ShortCode = "CS"
                        });
                });

            modelBuilder.Entity("Taaldc.Catalog.Domain.AggregatesModel.ProjectAggregate.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Developer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("project", "catalog");
                });

            modelBuilder.Entity("Taaldc.Catalog.Domain.AggregatesModel.PropertyAggregate.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<double>("LandArea")
                        .HasColumnType("float");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ProjectId");

                    b.ToTable("property", "catalog");
                });

            modelBuilder.Entity("Taaldc.Catalog.Domain.AggregatesModel.TowerAggregate.Tower", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("PropertyId");

                    b.ToTable("tower", "catalog");
                });

            modelBuilder.Entity("Taaldc.Catalog.Domain.AggregatesModel.FloorAggregate.Floor", b =>
                {
                    b.HasOne("Taaldc.Catalog.Domain.AggregatesModel.TowerAggregate.Tower", null)
                        .WithMany("Floors")
                        .HasForeignKey("TowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Taaldc.Catalog.Domain.AggregatesModel.FloorAggregate.Unit", b =>
                {
                    b.HasOne("Taaldc.Catalog.Domain.AggregatesModel.FloorAggregate.Floor", null)
                        .WithMany("Units")
                        .HasForeignKey("FloorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Taaldc.Catalog.Domain.AggregatesModel.FloorAggregate.ScenicView", "ScenicView")
                        .WithMany()
                        .HasForeignKey("_scenicViewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Taaldc.Catalog.Domain.AggregatesModel.FloorAggregate.UnitStatus", "UnitStatus")
                        .WithMany()
                        .HasForeignKey("_unitStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Taaldc.Catalog.Domain.AggregatesModel.FloorAggregate.UnitType", "UnitType")
                        .WithMany()
                        .HasForeignKey("_unitTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScenicView");

                    b.Navigation("UnitStatus");

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("Taaldc.Catalog.Domain.AggregatesModel.PropertyAggregate.Property", b =>
                {
                    b.HasOne("Taaldc.Catalog.Domain.AggregatesModel.ProjectAggregate.Project", null)
                        .WithMany("Properties")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Taaldc.Catalog.Domain.AggregatesModel.TowerAggregate.Tower", b =>
                {
                    b.HasOne("Taaldc.Catalog.Domain.AggregatesModel.PropertyAggregate.Property", null)
                        .WithMany("Towers")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Taaldc.Catalog.Domain.AggregatesModel.FloorAggregate.Floor", b =>
                {
                    b.Navigation("Units");
                });

            modelBuilder.Entity("Taaldc.Catalog.Domain.AggregatesModel.ProjectAggregate.Project", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("Taaldc.Catalog.Domain.AggregatesModel.PropertyAggregate.Property", b =>
                {
                    b.Navigation("Towers");
                });

            modelBuilder.Entity("Taaldc.Catalog.Domain.AggregatesModel.TowerAggregate.Tower", b =>
                {
                    b.Navigation("Floors");
                });
#pragma warning restore 612, 618
        }
    }
}
