// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Taaldc.Marketing.Infrastructure;

#nullable disable

namespace Taaldc.Marketing.Infrastructure.Migrations
{
    [DbContext(typeof(MarketingDbContext))]
    [Migration("20221228034116_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("inquiryseq", "marketing")
                .IncrementsBy(10);

            modelBuilder.Entity("Taaldc.Marketing.Domain.AggregatesModel.InquiryAggregate.Inquiry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "inquiryseq", "marketing");

                    b.Property<string>("AttendedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Property")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("_inquiryTypeId")
                        .HasColumnType("int")
                        .HasColumnName("InquiryType");

                    b.Property<int>("_statusId")
                        .HasColumnType("int")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.HasIndex("_inquiryTypeId");

                    b.HasIndex("_statusId");

                    b.ToTable("inquiry", "marketing");
                });

            modelBuilder.Entity("Taaldc.Marketing.Domain.AggregatesModel.InquiryAggregate.InquiryStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("inquirystatus", "marketing");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "New"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Open"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Closed"
                        });
                });

            modelBuilder.Entity("Taaldc.Marketing.Domain.AggregatesModel.InquiryAggregate.InquiryType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("inqurytype", "marketing");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "SALES INQUIRY"
                        },
                        new
                        {
                            Id = 2,
                            Name = "LEASING INQUIRY"
                        },
                        new
                        {
                            Id = 3,
                            Name = "BROKER ACCREDITATION"
                        },
                        new
                        {
                            Id = 4,
                            Name = "COMMERCIAL SPACE INQUIRY"
                        },
                        new
                        {
                            Id = 5,
                            Name = "PARKING INQUIRY"
                        },
                        new
                        {
                            Id = 6,
                            Name = "PROPERTY MANAGEMENT"
                        },
                        new
                        {
                            Id = 7,
                            Name = "BUSINESS PROPOSAL"
                        },
                        new
                        {
                            Id = 8,
                            Name = "ADMIN CONCERNS"
                        },
                        new
                        {
                            Id = 9,
                            Name = "OTHER CONCERNS"
                        });
                });

            modelBuilder.Entity("Taaldc.Marketing.Domain.AggregatesModel.InquiryAggregate.Inquiry", b =>
                {
                    b.HasOne("Taaldc.Marketing.Domain.AggregatesModel.InquiryAggregate.InquiryType", "InquiryType")
                        .WithMany()
                        .HasForeignKey("_inquiryTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Taaldc.Marketing.Domain.AggregatesModel.InquiryAggregate.InquiryStatus", "Status")
                        .WithMany()
                        .HasForeignKey("_statusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Taaldc.Marketing.Domain.AggregatesModel.InquiryAggregate.Customer", "Customer", b1 =>
                        {
                            b1.Property<int>("InquiryId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseHiLo(b1.Property<int>("InquiryId"), "inquiryseq", "marketing");

                            b1.Property<string>("ContactNo")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EmailAddress")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Province")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Salutation")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("TownCity")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("InquiryId");

                            b1.ToTable("inquiry", "marketing");

                            b1.WithOwner()
                                .HasForeignKey("InquiryId");
                        });

                    b.Navigation("Customer")
                        .IsRequired();

                    b.Navigation("InquiryType");

                    b.Navigation("Status");
                });
#pragma warning restore 612, 618
        }
    }
}
