@using TaalDc.Portal.DTO.Sales;
@model ParkingStats_ClientDto

@{
    ViewData["Title"] = "Dashboard";

}

<div class="container-fluid">
    
    <ul class="nav nav-pills">
        <li class="nav-item">
            <a class="nav-link " aria-current="page" asp-controller="Home" asp-action="Index">Units</a>
        </li>
        <li class="nav-item">
            <a class="nav-link active" aria-current="page" asp-controller="Home" asp-action="Parking">Parking</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" aria-current="page" asp-controller="Home" asp-action="FloorPlans">Floor Plans</a>
        </li>
    </ul>


    <div class="mt-3 mb-3">
        <div class="unit-summary">
            <div class="card stats-card" style="width: 15rem;margin-right: 1rem;">
                <div class="card-body">
                    <p class="status available">
                        <strong>Available</strong>
                    </p>
                    <p class="unit">
                        @Model.UnitCountByStatus.Where(i => i.UnitStatus == "AVAILABLE").Sum(i => i.Count)
                    </p>
                </div>
            </div>

            <div class="card stats-card" style="width: 15rem;margin-right: 1rem;">
                <div class="card-body">
                    <p class="status reserved">
                        <strong>Reserved</strong>
                    </p>
                    <p class="unit">
                        @Model.UnitCountByStatus.Where(i => i.UnitStatus == "RESERVED").Sum(i => i.Count)
                    </p>
                </div>
            </div>

            <div class="card stats-card" style="width: 15rem;margin-right: 1rem;">
                <div class="card-body">
                    <p class="status sold">
                        <strong>Sold</strong>
                    </p>
                    <p class="unit">
                        @Model.UnitCountByStatus.Where(i => i.UnitStatus == "SOLD").Sum(i => i.Count)
                    </p>
                </div>
            </div>

            <div class="card stats-card" style="width: 15rem;margin-right: 1rem;">
                <div class="card-body">
                    <p class="status blocked">
                        <strong>Blocked</strong>
                    </p>
                    <p class="unit">
                        @Model.UnitCountByStatus.Where(i => i.UnitStatus == "BLOCKED").Sum(i => i.Count)
                    </p>
                </div>
            </div>
        </div>

        <div class="card availability-per-unittype mb-3">
            <div class="card-header bg-white">
                <h5 class="text-center mt-2 mb-2"><strong>AVAILABILITY PER UNIT TYPE</strong></h5>
            </div>
            
           <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped align-middle stats-table">
                        <thead>
                            <tr>
                                <th>UNIT TYPE</th>
                                <th>FLOOR AREA</th>
                                <th>UNIT PRICE RANGE</th>
                                <th>AVAILABLE</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach(var unitType in Model.UnitsPerType)
                            {
                                    <tr>
                                        <td>@unitType.UnitType</td>
                                        <td>@unitType.FloorArea</td>
                                        <td>@unitType.UnitPriceRange</td>
                                        <td>@unitType.Available</td>
                                    </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>


        <div class="row">
            <div class="col-lg-12">
                <div class="card availability-per-unittype">
                    <div class="card-header bg-white">
                        <h5 class="text-center mt-2 mb-2"><strong>PARKING AVAILABILITY PER FLOOR</strong></h5>
                    </div>

                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-striped stats-table">
                                <thead>
                                    <tr>
                                        <th>UNIT TYPE</th>
                                        <th>FLOOR</th>
                                        <th>AVAILABLE</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach(var unitType in Model.UnitsPerType)
                                    {
                                        var unitTypesFloors = Model.UnitsPerFloor.Where(i => i.UnitType == unitType.UnitType).ToList();

                                        var currentUnitType = "";

                                        @foreach (var floor in unitTypesFloors)
                                        {
                                            <tr>
                                                <td>@(unitType.UnitType != currentUnitType? unitType.UnitType: "")</td>
                                                <td>
                                                    @floor.Floor
                                                </td>
                                                <td>
                                                    @floor.Available
                                                </td>
                                            </tr>

                                            currentUnitType = floor.UnitType;
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
    </div>
</div>