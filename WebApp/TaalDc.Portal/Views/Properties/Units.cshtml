@using TaalDc.Portal.ViewModels.Catalog
@model PaginationQueryResult<TaalDc.Portal.DTO.Catalog.Unit_ClientDto>

@{
    ViewBag.Title = "Units";
    Layout = "_Layout";

    var filter = Context.Request.Query["filter"].FirstOrDefault();
    var sortBy = Context.Request.Query["sortBy"].FirstOrDefault();
    var sortOrder = Context.Request.Query["sortOrder "].FirstOrDefault();


    var currentPageNo = Model.PageNumber;
    var numberOfPagesToDisplay = 5;

    var totalPageGroups = Model.TotalPages / numberOfPagesToDisplay;

    var pageGroups = new List<int>();

    for (var i = 1; i <= totalPageGroups; i++)
    {
        pageGroups.Add(i * numberOfPagesToDisplay);
    }

    var nextPage = 0;
    var prevPage = 0;

}

<div class="container-fluid">
    <ul class="nav nav-tabs">
        <li class="nav-item">
            <a class="nav-link" aria-current="page" asp-controller="Properties" asp-action="Index">Properties</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" asp-controller="Properties" asp-action="Towers">Towers</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" asp-controller="Properties" asp-action="Floors">Floors</a>
        </li>
        <li class="nav-item">
            <a class="nav-link active" asp-controller="Properties" asp-action="Units">Units</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" asp-controller="Properties" asp-action="UnitTypes">Unit Types</a>
        </li>
    </ul>


    <div class="tab-content">
        <div class="action-section">
            <div class="action-btn text-end">
                <a asp-controller="Properties" asp-action="CreateUnit" class="btn btn-primary">New Unit</a>
            </div>

            <div class="action-search">
                <form>
                    <input name="filter" value="@(!string.IsNullOrEmpty(filter) ? filter : "")" class="form-control" placeholder="Search..."/>
                </form>
            </div>
        </div>

        <div class="data-section">
            <div class="table-responsive w-100 mb-3">
                <table class="table table-striped" style="min-width: 1500px;">
                    <thead>
                    <tr>
                        <th>ID</th>
                        <th>Property</th>
                        <th>Unit Type</th>
                        <th>Floor No.</th>
                        <th>Total Area</th>
                        <th>Floor Area</th>
                        <th>Balcony Area</th>
                        <th>Unit No.</th>
                        <th>Selling Price</th>
                        <th>Status</th>
                        <th></th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var prop in Model.Data)
                    {
                        var propertyWords = prop.PropertyName.Split(' ');

                        var propertyInitials = "";

                        foreach (var word in propertyWords)
                        {
                            propertyInitials = propertyInitials + word[0];
                        }


                        <tr>
                            <td>@prop.Id</td>
                            <td>@(propertyInitials + " - " + prop.TowerName)</td>
                            <td>@prop.UnitType @prop.ScenicView</td>
                            <td>@prop.FloorName</td>
                            <td>@prop.TotalArea</td>
                            <td>@prop.FloorArea</td>
                            <td>@prop.BalconyArea</td>
                            <td>@prop.Identifier</td>
                            <td>@prop.Price.ToString("#,##0.00")</td>
                            <td>@prop.UnitStatus</td>
                            <td>
                                @if (prop.UnitStatusId == 2 || prop.UnitStatusId == 3)
                                {

                                }
                                else
                                {
                                    <a class="action-edit" asp-controller="Properties" asp-action="EditUnit" asp-route-id="@prop.Id">Edit</a>
                                    <a class="action-delete" href="#">Delete</a>
                                }
                                
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
            <div>
                <ul class="pagination">

                    @{
                        var pageGroupIndex = pageGroups.Where(i => currentPageNo <= i).FirstOrDefault();
                        var lastPageIndex = pageGroups.OrderByDescending(i => i).FirstOrDefault();
                        var pageGroup = pageGroups.Count() > 0 && pageGroupIndex > 0 ? pageGroupIndex : Model.TotalPages;
                        var pageGroupMinPage = Model.TotalPages <= 5 ? 0 : pageGroupIndex > 0 ? pageGroup - numberOfPagesToDisplay : lastPageIndex;

                        //5 -> 0
                        //10 -> 5

                        nextPage = currentPageNo < Model.TotalPages ? currentPageNo + 1 : 0;
                        prevPage = currentPageNo > 1 ? currentPageNo - 1 : 0;
                    }

                    <li class="page-item @(prevPage == 0 ? "disabled" : "")">
                        <a class="page-link alink noselect" href="?pageNumber=@(prevPage)">Prev</a>
                    </li>

                    @if (pageGroup == 0 || pageGroup == pageGroupMinPage)
                    {
                        <li class="page-item">
                            <a href="?pageNumber=@(Model.PageNumber)" class="noselect page-link alink active">@Model.PageNumber</a>
                        </li>
                    }

                    @for (var i = pageGroupMinPage; i < pageGroup; i++)
                    {
                        var active = i + 1 == Model.PageNumber;
                        var pageNo = i + 1;
                        <li class="page-item">
                            <a href="?pageNumber=@(pageNo)" class="noselect page-link alink @(active ? "active" : "")">@(pageNo)</a>
                        </li>
                    }

                    <li class="page-item @(nextPage == 0 ? "disabled" : "")">
                        <a class="page-link alink noselect" href="?pageNumber=@(nextPage)">Next</a>
                    </li>

                </ul>
            </div>

        </div>
    </div>
</div>