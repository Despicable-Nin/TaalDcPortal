@model TaalDc.Portal.ViewModels.Catalog.TowerCreate_ClientDto

@{
    ViewBag.Title = "Create Tower";
    Layout = "_Layout";
}


<div class="container-fluid">
    <h4 class="primary-color mb-3">
        <strong>
            New Tower
        </strong>
    </h4>

    <div>
        <form id="towerForm" method="post" class="row mb-5 needs-validation" asp-action="CreateTower" asp-controller="Properties">
            <div class="mb-3 col-lg-8">
                <label asp-for="PropertyId" class="form-label">
                    <strong>Property</strong>
                </label>
                <select asp-for="PropertyId" class="form-control form-select" required>
                    <option value="1">
                        One Tolentino East Residences
                    </option>
                </select>
                <div class="invalid-feedback">
                    This is a required field.
                </div>
            </div>
            <div class="mb-3 col-lg-8">
                <label asp-for="Name" class="form-label">
                    <strong>Tower Name</strong>
                </label>
                <input asp-for="Name" class="form-control" required/>
                <div class="invalid-feedback">
                    This is a required field.
                </div>
            </div>
            <div class="mb-3 col-lg-8">
                <label asp-for="Address" class="form-label">
                    <strong>Address</strong>
                </label>
                <input asp-for="Address" class="form-control" required/>
                <div class="invalid-feedback">
                    This is a required field.
                </div>
            </div>
            <div class="col-lg-12">
                <input id="tower-form-submit" class="btn btn-primary" type="submit" value="Save"/>
            </div>
        </form>
    </div>

</div>


@section Scripts
{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        const form = document.getElementById('towerForm');
        form.addEventListener('submit', onPropertyFormSubmit);

        function onPropertyFormSubmit(event) {
            event.preventDefault();

            var btn = document.getElementById("tower-form-submit");

            btn.disabled = true;

            const data = new FormData(event.target);

            const value = Object.fromEntries(data.entries());

            console.log('form values', value);

            var isFormValid = event.target.checkValidity();

            console.log('form validity', isFormValid);

            event.target.classList.add("was-validated");

            if (isFormValid) {
                var formAction = event.target.action

                $.ajax({
                    type: 'POST',
                    url: formAction,
                    data: value,
                    success: function (data, status, xhr) {
                        console.log('tower post', data);
                        Toastify({
                            text: "Submitted successfully!",
                            duration: 3000,
                            close: true,
                            gravity: "top", // `top` or `bottom`
                            position: "right", // `left`, `center` or `right`
                            stopOnFocus: true, // Prevents dismissing of toast on hover
                            style: {
                                background: "#6AB0F8",
                            },
                            onClick: function () { } // Callback after click
                        }).showToast();
                        
                        setTimeout(() => window.location.replace("/Properties/Towers"),500);
                    }, error: function (XMLHttpRequest, textStatus, errorThrown) {
                        Toastify({
                            text: errorThrown,
                            duration: 3000,
                            close: true,
                            gravity: "top", // `top` or `bottom`
                            position: "center", // `left`, `center` or `right`
                            stopOnFocus: true, // Prevents dismissing of toast on hover
                            style: {
                                background: "#D01818",
                            },
                            onClick: function () { } // Callback after click
                        }).showToast();

                        btn.disabled = false;
                    }
                });
            } else {
                btn.disabled = false;
            }
            return false;
        }
    </script>

}