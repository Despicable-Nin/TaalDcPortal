@model TaalDc.Portal.ViewModels.Catalog.PropertyCreate_ClientDto

@{
    ViewBag.Title = "Create Property";
    Layout = "_Layout";
}


<div class="container-fluid">
    <h4 class="primary-color mb-3">
        <strong>
            New Property
        </strong>
    </h4>
    <div>
        <form id="propertyForm" method="post" class="row mb-5 needs-validation" asp-action="CreateProperty" asp-controller="Properties">
            <div class="mb-3 col-lg-8">
                <label asp-for="Name" class="form-label">
                    <strong>Property Name</strong>
                </label>
                <input asp-for="Name" class="form-control" required/>
                <div class="invalid-feedback">
                    This is a required field.
                </div>
            </div>
            <div class="mb-3 col-lg-8">
                <label class="form-label">
                    <strong>Land Area</strong>
                </label>
                <div class="input-group mb-3">
                    <input asp-for="LandArea" type="number" class="form-control" required/>
                    <span class="input-group-text">sqm</span>
                    <div class="invalid-feedback">
                        This is a required field.
                    </div>
                </div>

            </div>

            <div class="col-lg-12">
                <input id="property-form-submit" class="btn btn-primary" type="submit" value="Save"/>
            </div>
        </form>
    </div>
</div>


<!-- Modal -->
<div class="modal fade" id="confirmationModal" tabindex="-1" aria-labelledby="confirmationModal" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Form Submission</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to add this property?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">No</button>
                <button onclick="onPropertyFormSubmit(this)" type="button" class="btn btn-primary">Yes</button>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        const form = document.getElementById('propertyForm');
        form.addEventListener('submit', openFormConfirmation);


        function openFormConfirmation(event){
            event.preventDefault();

            var isFormValid = event.target.checkValidity();

            event.target.classList.add("was-validated");

            if(isFormValid){
                var confirmationModal = document.getElementById('confirmationModal');
                var modal = new bootstrap.Modal(confirmationModal, {});
                modal.show();
            }
           return false;
        }

        function closeModal(){
            var confirmationModal = document.getElementById("confirmationModal");
            const modalBackdrop = document.getElementsByClassName("modal-backdrop");

            confirmationModal.classList.remove("show");
            confirmationModal.style.display = "none";
            document.body.classList.remove("modal-open");
            document.body.removeAttribute("style");

            while (modalBackdrop.length > 0) {
                modalBackdrop[0].parentNode.removeChild(modalBackdrop[0]);
            }
    }

        function onPropertyFormSubmit(modalBtn) {
            var btn = document.getElementById("property-form-submit");

            btn.disabled = true;
            modalBtn.disabled = true;

            const data = new FormData(form);

            const value = Object.fromEntries(data.entries());

            console.log('form values', value);

            var isFormValid = form.checkValidity();

            if (isFormValid) {
                var formAction = form.action

                $.ajax({
                    type: 'POST',
                    url: formAction,
                    data: value,
                    success: function (data, status, xhr) {
                        console.log('property post', data);
                        Toastify({
                            text: "Submitted successfully!",
                            duration: 3000,
                            close: true,
                            gravity: "top", // `top` or `bottom`
                            position: "right", // `left`, `center` or `right`
                            stopOnFocus: true, // Prevents dismissing of toast on hover
                            style: {
                                background: "#6AB0F8",
                            },
                            onClick: function () { } // Callback after click
                        }).showToast();
                        
                        //TODO: Toast immediately closes 
                        setTimeout(() => window.location.replace("/Properties/Index"),500);
                    }, error: function (data) {
                        const response = data.responseJSON;

                        Toastify({
                            text: response && response.message ? response.message : "Something went wrong. Please try again later.",
                            duration: 3000,
                            close: true,
                            gravity: "top", // `top` or `bottom`
                            position: "center", // `left`, `center` or `right`
                            stopOnFocus: true, // Prevents dismissing of toast on hover
                            style: {
                                background: "#D01818",
                            },
                            onClick: function () { } // Callback after click
                        }).showToast();

                        btn.disabled = false;
                        modalBtn.disabled = false;

                        closeModal();
                    }
                });
            }else{
                btn.disabled = false;
                modalBtn.disabled = false;
            }
            return false;
        }
    </script>
}