@using SeedWork;
@model PaginationQueryResult<TaalDc.Portal.DTO.Sales.GetSalesByIdResponse>
@inject IAmCurrentUser CurrentUser

@{
    ViewBag.Title = "Sales";
    Layout = "_Layout";

    var filter = Context.Request.Query["filter"].FirstOrDefault();

    var currentPageNo = Model.PageNumber;
    var numberOfPagesToDisplay = 5;

    var totalPageGroups = Model.TotalPages / numberOfPagesToDisplay;

    var pageGroups = new List<int>();

    for (var i = 1; i <= totalPageGroups; i++)
    {
        pageGroups.Add(i * numberOfPagesToDisplay);
    }

    var nextPage = 0;
    var prevPage = 0;
}


<div class="container-fluid">
    <ul class="nav nav-tabs">
        <li class="nav-item">
            <a class="nav-link" aria-current="page" asp-controller="Sales" asp-action="Index">Sold</a>
        </li>
        <li class="nav-item">
            <a class="nav-link active" asp-controller="Sales" asp-action="Reserved">Reserved</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" asp-controller="Sales" asp-action="Blocked">Blocked</a>
        </li>
    </ul>


    <div class="tab-content">
        <div class="action-section">
            @if(CurrentUser.IsAdmin()){
                <div class="action-btn text-end">
                    <a onclick="openExportReport()" class="btn btn-primary" href="#"><i class="fa-sharp fa-solid fa-file-excel"></i> Export</a>
                </div>
            }

            <div class="action-search">
                <form>
                    <input name="filter" value="@(!string.IsNullOrEmpty(filter) ? filter : "")" class="form-control" placeholder="Search..."/>
                </form>
            </div>
        </div>

        <div class="data-section">
            <div class="table-responsive w-100 mb-3">
                <table class="table table-striped sales-table">
                    <thead>
                    <tr>
                        <th>ID</th>
                        <th style="width: 215px">Customer Name</th>
                        <th>Tower</th>
                        <th>Unit Type</th>
                        <th>Unit No.</th>
                        <th>Sales Status</th>
                        <th>Unit Status</th>
                       @* <th></th>*@
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var sale in Model.Data)
                    {
                        <tr>
                            <td>
                                <a asp-action="Details" asp-controller="Sales" asp-route-id="@sale.OrderId">@sale.OrderId</a>
                            </td>
                            <td>@sale.FirstName @sale.LastName</td>
                            <td>@sale.Tower</td>
                            <td>@sale.UnitType @sale.ScenicView</td>
                            <td>@sale.Unit</td>
                            <td>@(sale.Status != null ? sale.Status.ToUpper() : "")</td>
                            <td>@sale.UnitStatus.ToUpper()</td>
                            @*<td>
                                <a class="action-edit" href="#">Edit</a>
                                <a class="action-delete" href="#">Delete</a>
                            </td>*@
                        </tr>
                    }


                    @if (Model.Data.Count() == 0)
                    {
                        <tr>
                            <td class="text-center" colspan="8">No data to display.</td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>

            <div>
                <ul class="pagination">

                    @{
                        var pageGroupIndex = pageGroups.Where(i => currentPageNo <= i).FirstOrDefault();
                        var lastPageIndex = pageGroups.OrderByDescending(i => i).FirstOrDefault();
                        var pageGroup = pageGroups.Count() > 0 && pageGroupIndex > 0 ? pageGroupIndex : Model.TotalPages;
                        var pageGroupMinPage = Model.TotalPages <= 5 ? 0 : pageGroupIndex > 0 ? pageGroup - numberOfPagesToDisplay : lastPageIndex;

                        //5 -> 0
                        //10 -> 5

                        nextPage = currentPageNo < Model.TotalPages ? currentPageNo + 1 : 0;
                        prevPage = currentPageNo > 1 ? currentPageNo - 1 : 0;
                    }

                    <li class="page-item @(prevPage == 0 ? "disabled" : "")">
                        <a class="page-link alink noselect" href="?pageNumber=@(prevPage)">Prev</a>
                    </li>

                    @if (pageGroup == 0 || pageGroup == pageGroupMinPage)
                    {
                        <li class="page-item">
                            <a href="?pageNumber=@(Model.PageNumber)" class="noselect page-link alink active">@Model.PageNumber</a>
                        </li>
                    }

                    @for (var i = pageGroupMinPage; i < pageGroup; i++)
                    {
                        var active = i + 1 == Model.PageNumber;
                        var pageNo = i + 1;
                        <li class="page-item">
                            <a href="?pageNumber=@(pageNo)" class="noselect page-link alink @(active ? "active" : "")">@(pageNo)</a>
                        </li>
                    }

                    <li class="page-item @(nextPage == 0 ? "disabled" : "")">
                        <a class="page-link alink noselect" href="?pageNumber=@(nextPage)">Next</a>
                    </li>

                </ul>
            </div>

        </div>
    </div>
</div>


<div class="modal fade" id="sales-report">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5">Sales Report</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form class="row needs-validation" id="salesReportForm" method="get" asp-action="Report" asp-controller="Sales">
                     <div class="mb-3 col-lg-6">
                        <label for="From" class="form-label">
                            <strong>Date From</strong>
                        </label>
                        <input name="From" class="form-control" required type="date" />
                        <div class="invalid-feedback">
                            This is a required field.
                        </div>
                    </div>
                    <div class="mb-3 col-lg-6">
                        <label for="To" class="form-label">
                            <strong>Date To</strong>
                        </label>
                        <input name="To" class="form-control" required type="date" />
                        <div class="invalid-feedback">
                            This is a required field.
                        </div>
                    </div>

                    <div class="col-lg-12">
                        <input class="btn btn-primary w-100" type="submit" value="Download" />
                    </div>
                </form>
            </div>
        </div>

      
    </div>
</div>

@section Scripts{
    <script>
        function openExportReport(){
            var reportModal = document.getElementById('sales-report');

            var modal = new bootstrap.Modal(reportModal, {});

            modal.show();
        }


        const salesReportForm = document.getElementById('salesReportForm');

        salesReportForm.addEventListener('submit', getReport);

        function getReport(event){
            $('.formLoader').show();
            event.preventDefault();
            const form = event.target;
            const data = new FormData(form);
            const value = Object.fromEntries(data.entries());

            console.log(value);

            var redirectTo = `${form.action}?from=${value.From}&to=${value.To}`;
            
            window.open(redirectTo, '_blank');
            //window.location.replace(redirectTo);

            $('.formLoader').hide();
        }
    </script>
}