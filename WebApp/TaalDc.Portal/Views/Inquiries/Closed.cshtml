@model TaalDc.Portal.DTO.Marketing.InquriesResult

@{
    ViewBag.Title = "Inquiries - Closed";
    Layout = "_Layout";

     var currentPageNo = Model.PageNumber;
    var numberOfPagesToDisplay = 5;

    var totalPages = Model.Total % Model.PageSize > 0 ? Model.Total / Model.PageSize + 1 : Model.Total / Model.PageSize;

    var totalPageGroups = totalPages / numberOfPagesToDisplay;

    var pageGroups = new List<int>();

    for (var i = 1; i <= totalPageGroups; i++)
    {
        pageGroups.Add(i * numberOfPagesToDisplay);
    }

    var nextPage = 0;
    var prevPage = 0;
}

<div class="container-fluid">
    <ul class="nav nav-tabs">
        <li class="nav-item">
            <a class="nav-link" aria-current="page" asp-controller="Inquiries" asp-action="Index">Active</a>
        </li>
        <li class="nav-item">
            <a class="nav-link active" aria-current="page" asp-controller="Inquiries" asp-action="Closed">Closed</a>
        </li>
    </ul>

    <div class="tab-content mb-3">
        <table class="table table-striped">
            <thead>
            <tr>
                <th>ID</th>
                <th>Inquiry Date</th>
                <th>Property</th>
                <th>Customer</th>
                <th>Contact No.</th>
                <th>Type</th>
                <th>Status</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var i in Model.Inquiries.OrderBy(i => i.DateOfInquiry))
            {
                
                    <tr>
                        <td>
                            <a asp-action="Details" asp-controller="Inquiries" asp-route-id="@i.Id">@i.Id</a>
                        </td>
                        <td>@i.DateOfInquiry.ToString("MM/dd/yyyy")</td>
                        <td>@i.Property</td>

                        <td>@($"{i.FirstName} {i.LastName} - ({i.EmailAddress})")</td>
                        <td>@i.ContactNo</td>
                        <td>@i.InquiryType</td>
                        <td>@i.Status</td>
                    </tr>
            }
            </tbody>
        </table>
    </div>

     <div>
            <ul class="pagination">

                @{
                    var pageGroupIndex = pageGroups.Where(i => currentPageNo <= i).FirstOrDefault();
                    var lastPageIndex = pageGroups.OrderByDescending(i => i).FirstOrDefault();
                    var pageGroup = pageGroups.Count() > 0 && pageGroupIndex > 0 ? pageGroupIndex : totalPages;
                var pageGroupMinPage = totalPages <= 5 ? 0 : pageGroupIndex > 0 ? pageGroup - numberOfPagesToDisplay : lastPageIndex;

                    //5 -> 0
                    //10 -> 5

                    nextPage = currentPageNo < totalPages ? currentPageNo + 1 : 0;
                    prevPage = currentPageNo > 1 ? currentPageNo - 1 : 0;
                }

                <li class="page-item @(prevPage == 0 ? "disabled" : "")">
                    <a class="page-link alink noselect" href="?pageNumber=@(prevPage)">Prev</a>
                </li>

                @if (pageGroup == 0 || pageGroup == pageGroupMinPage)
                {
                    <li class="page-item">
                        <a href="?pageNumber=@(Model.PageNumber)" class="noselect page-link alink active">@Model.PageNumber</a>
                    </li>
                }

                @for (var i = pageGroupMinPage; i < pageGroup; i++)
                {
                    var active = i + 1 == Model.PageNumber;
                    var pageNo = i + 1;
                    <li class="page-item">
                        <a href="?pageNumber=@(pageNo)" class="noselect page-link alink @(active ? "active" : "")">@(pageNo)</a>
                    </li>
                }

                <li class="page-item @(nextPage == 0 ? "disabled" : "")">
                    <a class="page-link alink noselect" href="?pageNumber=@(nextPage)">Next</a>
                </li>

            </ul>
        </div>

</div>